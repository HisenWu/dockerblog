Docker Registry虚拟机配置
1	Openstack相关配置
1.1	创建docker-index数据库
/opt/gaussdb/app/bin/gsql -d postgres -U openstack -W FusionSphere123 -h 172.28.0.100 -p 5432
create database docker;
1.2	创建三个角色
keystone role-create --name registry-super-admin
keystone role-create --name registry-admin 
keystone role-create --name registry-readonly
角色说明：
超级管理员（registry-super-admin）:可以管理所有的仓库镜像，包括公共仓库
管理员（registry-admin）：用来管理租户的私有仓库
只读用户（registry-readonly）：可下载租户对应的私有仓库镜像，不能进行上传、删除动作
1.3	用nova用户在swift上创建docker后端存储的container

2	服务配置
2.1	Docker-index服务配置
配置文件：/etc/docker-index.conf
[index]
registry_endpoints = registry.abc.com     #registry地址
super_admin_role=registry-super-admin   #openstack创建的超级管理员角色
admin_role=registry-admin             # openstack创建的租户仓库管理员
readonly_role=registry-readonly         #openstack创建的只读用户

# 数据库连接
[database]
connection=postgresql://openstack:N8296FGj0gDK1OA8djBQ50u/7CZvJ+RfE2qNhiGICE8=@172.28.0.100:5432/docker
quota = 2

# index服务对应的service用户（可新建一个service用户）
[keystone]
url=https://localdomain.com:8023/identity/v2.0
user_name=cloud_admin
tenant_name=admin
password=FusionSphere123
admin_role=admin

2.2	Docker-registry服务配置
配置文件：/etc/docker-registry.yml
修改如下配置项：
settings_flavor: swift

standalone: _env:STANDALONE:false
index_endpoint: _env:INDEX_ENDPOINT:https://www.abc.com
disable_token_auth: _env:DISABLE_TOKEN_AUTH:false
swift: &swift
    <<: *common
    storage: swift
    storage_path: _env:STORAGE_PATH:/registry
    # keystone authorization
    swift_authurl: _env:OS_AUTH_URL:"https://localdomain.com:8023/identity/v2.0"
    swift_container: _env:OS_CONTAINER:docker
    swift_user: _env:OS_USERNAME:nova
    swift_password: _env:OS_PASSWORD:FusionSphere123
    swift_tenant_name: _env:OS_TENANT_NAME:service
swift_region_name: _env:OS_REGION_NAME:az1.dc1
2.3	Apache2配置
2.3.1	生成证书
Index和registry都需要证书，这里采用自签名的证书，对应的域名分别是www.abc.com和registry.abc.com，生成过程如下：

openssl genrsa -des3 -out server.key 1024
openssl req -new -key server.key -out server.csr  （Common Name需输入www.abc.com）
openssl rsa -in server.key -out service-index.key
openssl x509 -req -days 365 -in server.csr -signkey service-index.key -out service-index.crt

registry证书生成过程一样（Common Name需输入registry.abc.com）
2.3.2	Index Vhost配置
配置文件：/etc/apache2/vhosts.d/wsgi-docker-index.conf
LoadModule wsgi_module /usr/lib64/apache2/mod_wsgi.so

<VirtualHost *:443>
    ServerName www.abc.com
    DocumentRoot /usr/lib64/python2.6/site-packages/docker_index
    WSGIScriptAlias /  /usr/lib64/python2.6/site-packages/docker_index/wsgi.py
    ErrorLog /var/log/docker-index/apache24.log
    CustomLog /var/log/docker-index/apache-custom.log common
    LogLevel debug
    <Directory /usr/lib64/python2.6/site-packages/docker_index>
        Order allow,deny
        Allow from all
    </Directory>
    LimitRequestLine 80000
    LimitRequestFieldSize 80000
    WSGIPassAuthorization On
    WSGIChunkedRequest On
    SSLEngine on
    SSLCertificateFile /home/index-cert/service-index.crt
    SSLCertificateKeyFile /home/index-cert/service-index.key

</VirtualHost>
Listen 443

2.3.3	Registry Vhost配置
LoadModule wsgi_module /usr/lib64/apache2/mod_wsgi.so

<VirtualHost *:443>
    ServerName registry.abc.com
    DocumentRoot /usr/lib64/python2.6/site-packages/docker_registry
    WSGIScriptAlias /  /usr/lib64/python2.6/site-packages/docker_registry/wsgi.py
    ErrorLog /var/log/docker-registry/apache24.log
    CustomLog /var/log/docker-registry/apache-custom.log common
    LogLevel debug
    <Directory /usr/lib64/python2.6/site-packages/docker_registry>
        Order allow,deny
        Allow from all
    </Directory>
    LimitRequestLine 80000
    LimitRequestFieldSize 80000
    WSGIPassAuthorization On

    WSGIChunkedRequest On
    SSLEngine on
    SSLCertificateFile /home/registry-cert/service-registry.crt
    SSLCertificateKeyFile /home/registry-cert/service-registry.key
</VirtualHost>
Listen 443


3	测试
3.1	创建一个测试租户demoa
keystone  tenant-create --name demoa  --description  "docker regsitry tenant" --enabled true
3.2	创建三个测试用户，分别具有三种角色
keystone user-create --name user-super --tenant demoa --pass  admin
keystone user-create --name user-admin  --tenant demoa --pass  admin
keystone user-create --name user-readonly --tenant demoa --pass  ad rolmin
keystone user-role-add  --user   user-super --role  registry-super-admin  --tenant  demoa
keystone user-role-add  --user   user-admin --role  registry-admin  --tenant  demoa
keystone user-role-add  --user   user-readonly --role registry-readonly  --tenant  demoa
3.3	在client虚拟机上将两个证书分别加入到可信列表中
从registry虚拟机上拷贝两个证书到客户端，并加入到可信列表
cat service-registry.crt >> /etc/ssl/certs/ca-bundle.crt
cat service-index.crt >> /etc/ssl/certs/ca-bundle.crt
3.4	Client虚拟机增加两个vi 域名的解析
在/etc/hosts中增加www.abc.com和registry.abc.com域名解析
3.5	登陆
docker login https://www.abc.com
用户名的格式：demoa/user-super  （租户名/用户名）
